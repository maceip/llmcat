name: Release

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    name: Build and Upload Release Assets
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: darwin
            goarch: arm64
            filename: llmcat-darwin-arm64
          - goos: windows
            goarch: 386
            filename: llmcat-windows-x86.exe
          - goos: linux
            goarch: amd64
            filename: llmcat-linux-x86_64
          - goos: linux
            goarch: arm64
            filename: llmcat-linux-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.0'

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -ldflags="-s -w" -o ${{ matrix.filename }} ./cmd/llmcat

      - name: Upload Release Asset
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.filename }}
          asset_name: ${{ matrix.filename }}
          asset_content_type: application/octet-stream

      - name: Upload Artifact (for manual runs)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.filename }}
          path: ./${{ matrix.filename }}